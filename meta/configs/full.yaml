---
- defaults:
    links:
      create: true
      relink: true

- clean: 
    - '~'
    - '~/.config'

- create:
  - ~/.bin
  - ~/.config
  - ~/.local/config
  - ~/workspace
  - ~/workspace/repos
  - ~/workspace/lib

- shell:
  - [git submodule update --init --recursive, Installing submodules]
  - [./config/conda/bootstrap-conda.sh]
  - [./config/rust/bootstrap-rust.sh]
  - [./config/fzf/bootstrap-fzf.sh]

- link:
    ~/.dotfiles:
      if: '[[ ! -d ~/.dotfiles ]]'
      path: ""

    # Bash
    ~/.bashrc: config/bash/bashrc

    # Readline
    ~/.inputrc: config/readline/inputrc

    # ZSH
    ~/.zshrc:
      if: 'command -v zsh &>/dev/null'
      path: config/zsh/zshrc
      force: true
    ~/.zshenv:
      if: 'command -v zsh &>/dev/null'
      path: config/zsh/zshenv
      force: true
      
    # Fish
    ~/.config/fish:
      if: 'command -v fish &>/dev/null'
      path: config/fish
      create: true
    
    ~/.config/nushell:
      if: 'command -v nu &>/dev/null && [[ $(uname) = Linux ]]'
      path: config/nushell

    ~/Library/Application Support/nushell:
      if: 'command -v nu &>/dev/null && [[ $(uname) = Darwin ]]'
      path: config/nushell

    # Starship prompt
    ~/.config/starship.toml:
      path: config/starship/starship.toml
      force: true
    
    # FD ignore file.
    ~/.config/fd:
      path: config/fd
    
    # Tmux
    ~/.tmux.conf:
      if: 'command -v tmux &>/dev/null'
      path: config/tmux/tmux_full.conf

    # Vim
    ~/.vimrc:
      path: config/vim/light.vim

    # Neovim
    ~/.config/nvim:
      if: 'command -v nvim &>/dev/null'
      path: config/nvim
      create: true

    # Git
    ~/.gitconfig: config/git/gitconfig

    # Screen
    ~/.screenrc:
      if: 'command -v screen &>/dev/null'
      path: config/screen/screenrc
    
    # Dir colors
    ~/.dir_colors: config/dircolors/dir_colors.gruvbox

    # Conda
    ~/.condarc:
      if: 'command -v conda &>/dev/null'
      path: config/conda/condarc

    # Terminator
    ~/.config/terminator/config:
      if: 'command -v terminator &>/dev/null'
      path: config/terminator/config
      create: true

    # Alacritty
    ~/.config/alacritty/alacritty.yml:
      if: 'command -v alacritty &>/dev/null'
      path: config/alacritty/alacritty-arch.yaml
      create: true

    # WezTerm
    ~/.config/wezterm:
      if: 'command -v wezterm &>/dev/null'
      path: config/wezterm
      create: true

    # Jetbrains vim emulator
    ~/.ideavimrc: config/jetbrains/ideavimrc

    # VSCode Linux
    ~/.config/Code/User:
      if: '[[ $(uname) = Linux ]]'
      glob: true
      path: config/vscode/linux/*.json
      force: true
      create: true
    
    # VSCode MacOS
    ~/Library/Application Support/Code/User:
      if: '[[ $(uname) = Darwin ]]'
      glob: true
      path: config/vscode/macos/*.json
      force: true
      create: true

    # ---------------------------------
    # |   Window managment and Xorg   |
    # ---------------------------------
    ~/.Xresources:
      path: config/Xorg/xresources
      create: true

    ~/.config/i3/config:
      if: 'command -v i3 &>/dev/null'
      path: config/i3/config
      create: true

    ~/.config/awesome:
      if: 'command -v awesome &>/dev/null'
      path: config/awesome

    ~/.xmonad:
      if: 'command -v xmonad &>/dev/null'
      path: config/xmonad
      create: true

    ~/.config/xmobar:
      if: 'command -v xmobar &>/dev/null'
      path: config/xmobar
      create: true

    ~/.config/picom/picom.conf:
      if: 'command -v picom &>/dev/null'
      path: config/picom/picom.conf
      create: true

    ~/.config/rofi/config.rasi:
      if: 'command -v rofi &>/dev/null'
      path: config/rofi/config.rasi
      create: true
