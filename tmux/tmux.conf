#######################################################################
#                               Prefix                                #
#######################################################################

# Change prefix to C-a
# Allow nested tmux sessions by making "C-b b" possible for sending a control
# sequence to a nested session
set-option -g prefix C-a
unbind-key C-a
bind-key a send-prefix


#######################################################################
#                             Keybindings                             #
#######################################################################

# Use vi bindings
set-option -g status-keys vi
set-window-option -g mode-keys vi

bind-key -r J resize-pane -D 4
bind-key -r K resize-pane -U 4
bind-key -r H resize-pane -L 4
bind-key -r L resize-pane -R 4

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n C-H select-pane -L
bind -n C-J select-pane -D 
bind -n C-K select-pane -U
bind -n C-L select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# pane movement
bind-key @ command-prompt -p "create pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

# window movement / renumbering like in screen's :number
bind-key m command-prompt -p "move window to:"  "swap-window -t '%%'"
bind-key . command-prompt "move-window -r -t '%%'"

# create new windows/panes in same directory
bind c new-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# enable and disable keyboard input for panes
bind < select-pane -d \; display-message "input disabled"
bind > select-pane -e \; display-message "input enabled"

# reload
bind-key R respawn-window

# URL view
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# Copy mode
bind-key Space copy-mode
bind-key C-Space copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

#######################################################################
#                               Options                               #
#######################################################################


# Add true color support
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Start Window Numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Disable automatic changes of titles
# set -g set-titles on
# set -g set-titles-string "#T"

set-window-option -g automatic-rename on
set-window-option -g allow-rename on
set -g renumber-windows on

set-window-option -g mouse on

# size windows based on clients looking at that window
# setw -g aggressive-resize on

# monitor windows for activity
# setw -g monitor-activity on

# don't wait for escape sequences
set -sg escape-time 0

# display pane numbers for longer
set -g display-panes-time 2000

# increase scrollback lines
set -g history-limit 65536


#######################################################################
#                               Plugins                               #
#######################################################################

# Restore more programms
set -g @resurrect-processes 'ssh psql mysql sqlite3'

# Resurrect vim session (see https://github.com/tpope/vim-obsession)
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Resurrect pane content
set -g @resurrect-capture-pane-contents 'on'

# Custom tmux session

# Tmux continuum
set -g @continuum-restore 'off'

set -g @plugin 'arcticicestudio/nord-tmux'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tpm'

# Bootstrap tpm if needed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'


#######################################################################
#                                THEME                                #
#######################################################################

# Set the status bar position to the bottom
set-option -g status-position "bottom"


#######################################################################
#                         Local Configuration                         #
#######################################################################

# Source local configuration if any
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'
