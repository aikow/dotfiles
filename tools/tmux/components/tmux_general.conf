#######################################################################
#                               Prefix                                #
#######################################################################

# Change prefix to C-a
# Allow nested tmux sessions by making "C-b b" possible for sending a control
# sequence to a nested session
set-option -g prefix C-a
bind-key -r C-a send-prefix
# Unbind the old send prefix key
unbind-key C-b


#######################################################################
#                             Keybindings                             #
#######################################################################

# Use vi bindings
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
bind-key -n M-o if-shell "$is_vim" 'send-keys M-o'  'select-pane -l'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-o' select-pane -l

# Meta + Shift + hjkl to resize panes
bind-key -nr M-H resize-pane -L 4
bind-key -nr M-J resize-pane -D 4
bind-key -nr M-K resize-pane -U 4
bind-key -nr M-L resize-pane -R 4

# Meta + Arrow keys to switch panes
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# Meta + Shift + Arrow keys to resize panes
bind-key -n M-S-Left resize-pane -L 4
bind-key -n M-S-Right resize-pane -R 4
bind-key -n M-S-Up resize-pane -U 4
bind-key -n M-S-Down resize-pane -D 4

# Windows
# Meta + n/p to switch windows
bind-key -n M-p previous-window
bind-key -n M-n next-window

# Shift + Left/Right to switch windows
bind-key -n S-Left  previous-window
bind-key -n S-Right next-window

# Sessions
# Meta + Shift + n/p to switch session
bind-key -n M-P switch-client -p
bind-key -n M-N switch-client -n

# Shift + Up/Down to switch the session
bind-key -n S-Up switch-client -p
bind-key -n S-Down switch-client -n

# create new windows/panes in same directory
bind-key c new-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key h split-window -v -c "#{pane_current_path}"

# Renaming
bind-key , command-prompt -p (rename-window) "rename-window '%%'"
bind-key '$' command-prompt -p (rename-session) "rename-session '%%'"

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key m command-prompt -p "move pane to:"  "join-pane -t '%%'"
bind-key a command-prompt -p "select pane:" "select-pane '%%'"

# window movement / renumbering like in screen's :number
bind-key M command-prompt -p "move window to:"  "swap-window -t '%%'"
bind-key . command-prompt "move-window -r -t '%%'"

# enable and disable keyboard input for panes
bind-key ( select-pane -d \; display-message "input disabled"
bind-key ) select-pane -e \; display-message "input enabled"

# swap windows left and right
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# Reload the window
bind-key R respawn-window

# Toggle pane synchronization
bind-key S set synchronize-panes

# Re-source the config file to apply changes
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# Copy mode
bind-key Space copy-mode
bind-key p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-V' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel


#######################################################################
#                               Options                               #
#######################################################################

# Start Window Numbering at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# Disable automatic changes of titles
# set -g set-titles on
# set -g set-titles-string "#T"

set-window-option -g automatic-rename on
set-window-option -g allow-rename on
set-option -g renumber-windows on

set-window-option -g mouse on

# don't wait for escape sequences
set-option -sg escape-time 0

# display pane numbers for longer
set-option -g display-panes-time 2000

# increase scrollback lines
set-option -g history-limit 65536

# Add true color support
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256col*:Tc"
set-option -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-environment -g COLORTERM "truecolor"

# Set default shell depending on the SHELL environment variable
if-shell '[[ "${MY_SHELL}" = "fish" ]] && [[ "$(uname) = "Darwin" ]]' "set-option -g default-shell /usr/local/bin/fish"
if-shell '[[ "${MY_SHELL}" = "fish" ]] && [[ "$(uname) != "Darwin" ]]' "set-option -g default-shell /usr/local/bin/fish"
if-shell '[[ "${MY_SHELL}" = "zsh" ]]' "set-option -g default-shell /bin/zsh"
if-shell '[[ "${MY_SHELL}" = "bash" ]]' "set-option -g default-shell /bin/bash"

