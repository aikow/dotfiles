#######################################################################
#                               Prefix                                #
#######################################################################

# Change prefix to C-a
# Allow nested tmux sessions by making "C-b b" possible for sending a control
# sequence to a nested session
set -g prefix C-a
bind -r C-a send-prefix
# Unbind the old send prefix key
unbind C-b


#######################################################################
#                             Keybindings                             #
#######################################################################

# Use vi bindings
set -g status-keys vi
setw -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
bind -n M-o if-shell "$is_vim" 'send-keys M-o'  'select-pane -l'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# Meta + Shift + hjkl to resize panes
bind -nr M-H resize-pane -L 4
bind -nr M-J resize-pane -D 4
bind -nr M-K resize-pane -U 4
bind -nr M-L resize-pane -R 4

# Meta + Arrow keys to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Meta + Shift + Arrow keys to resize panes
bind -n M-S-Left resize-pane -L 4
bind -n M-S-Right resize-pane -R 4
bind -n M-S-Up resize-pane -U 4
bind -n M-S-Down resize-pane -D 4

# Windows
bind -n M-p previous-window
bind -n M-n next-window
bind -r p previous-window
bind -r n next-window
bind -n S-Left  previous-window
bind -n S-Right next-window

# Sessions
bind -n M-P switch-client -p
bind -n M-N switch-client -n
bind -r P switch-client -p
bind -r N switch-client -n
bind -n S-Up switch-client -p
bind -n S-Down switch-client -n

# create new windows/panes in same directory
bind c new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"
#
# Renaming
bind , command-prompt -p (rename-window) "rename-window '%%'"
bind '$' command-prompt -p (rename-session) "rename-session '%%'"

# pane movement
bind j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind m command-prompt -p "move pane to:"  "join-pane -t '%%'"
bind a command-prompt -p "select pane:" "select-pane -t '%%'"

# window movement / renumbering like in screen's :number
bind M command-prompt -p "swap window to:" "swap-window -t '%%'"

# enable and disable keyboard input for panes
bind ( select-pane -d \; display-message "input disabled"
bind ) select-pane -e \; display-message "input enabled"

# Swap windows left and right
bind -r < swap-window -t -1\; select-window -t -1 
bind -r > swap-window -t +1\; select-window -t +1

# Reload the window
bind R respawn-window

# Toggle pane synchronization
bind S set synchronize-panes

# Resource the config file to apply changes
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# Copy mode
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'C-V' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel


#######################################################################
#                               Options                               #
#######################################################################

# Start Window Numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Disable automatic changing of titles
# set -g set-titles on
# set -g set-titles-string "#{pane_current_path}"

set -g automatic-rename on
set -g allow-rename on
set -g renumber-windows on

set -g focus-events on

set -g mouse on

# don't wait for escape sequences
set -sg escape-time 0

# display pane numbers for longer
set -g display-panes-time 5000

# increase scrollback lines
set -g history-limit 65536

# Add true color support
# set -g default-terminal "screen-256color"
if-shell '[[ "$(uname)" = "Darwin" ]]' {
  set -g default-terminal "screen-256color"
} {
  set -g default-terminal "tmux-256color"
}
set -ga terminal-overrides ",xterm-256color*:Tc"
set -as terminal-features ",xterm-256color:RGB"
set-environment -g COLORTERM "truecolor"

# Set default shell depending on the SHELL environment variable
set -g default-shell /bin/bash
if-shell '[[ "${MY_SHELL}" = "fish" ]] && [[ "$(uname)" = "Linux" ]]' "set -g default-shell /usr/bin/fish"
if-shell '[[ "${MY_SHELL}" = "fish" ]] && [[ "$(uname)" = "Darwin" ]]' "set -g default-shell /usr/local/bin/fish"
if-shell '[[ "${MY_SHELL}" = "zsh" ]]' "set -g default-shell /bin/zsh"
if-shell '[[ "${MY_SHELL}" = "bash" ]]' "set -g default-shell /bin/bash"

