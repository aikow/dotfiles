global !p
texMathZones = ['texMathZone' + x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS',
'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS',
'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z', 'AmsA', 'AmsB', 'AmsC',
'AmsD', 'AmsE', 'AmsF', 'AmsG', 'AmsAS', 'AmsBS', 'AmsCS', 'AmsDS', 'AmsES',
'AmsFS', 'AmsGS' ]] + ["VimwikiMath", "VimwikiEqIn"] + ['mkdMath', 'texMathZoneXX', 'texMathSymbol']
texIgnoreMathZones = ['texMathTextArg']
texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")
ignore = texIgnoreMathZoneIds[0]
def math():
    synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
    try:
        first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
        return first != ignore
    except StopIteration:
        return False
endglobal

context "math()"
priority 100
snippet ... "ldots" iA
\ldots $0
endsnippet

context "math()"
priority 100
snippet c.. "cdots" iA
\cdots $0
endsnippet

context "math()"
priority 100
snippet d.. "ddots" iA
\ddots $0
endsnippet

context "math()"
priority 100
snippet v.. "vdots" iA
\vdots $0
endsnippet

context "math()"
snippet => "implies" Ai
\implies
endsnippet

context "math()"
snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet "([a-zA-Z])mk" "Math letter" riA
$`!p snip.rv=match.group(1)`$
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ', ':', ';']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
$$ ${1:${VISUAL}} $$

$0
endsnippet

context "math()"
snippet bnm "Binomial" wA
\binom{${1:n}}{${2:k}}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet / "Fraction" i
\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

context "math()"
snippet := "def equals" iA
\vcentcolon=
endsnippet

context "math()"
snippet =: "equals def" iA
=\vcentcolon
endsnippet

context "math()"
snippet == "equals" iA
&= $1 \\\\
endsnippet

context "math()"
snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
context "math()"
snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

context "math()"
snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet lra "leftangle rightangle" iA
\left\langle ${1:${VISUAL}} \right\rangle$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

context "math()"
snippet sum "sum" w
\sum_{${1:n=1}}^{${2:\infty}} ${3:a_n}
endsnippet

context "math()"
snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet ooo "\infty" iA
\infty
endsnippet

context "math()"
snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet <= "leq" iA
\le 
endsnippet

context "math()"
snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet eE "exists" iA
\exists 
endsnippet

context "math()"
snippet aA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

context "math()"
snippet R0+ "R0+" iA
\\R_0^+
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

context "math()"
snippet ox "o times" iA
\otimes 
endsnippet

context "math()"
snippet o+ "o plus" iA
\oplus
endsnippet

context "math()"
priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\norm{$1}
endsnippet

context "math()"
snippet abs "absolute value" iA
\abs{$1}
endsnippet

context "math()"
snippet ip "inner product" iA
\ip{$1}{$2}
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|cot|csc|ln|log|exp|star|perp|max|min|sup|inf|gets)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet '(?<!\\)a(sin|cos|tan|cot|csc|sec)' "ln" rwA
\\arc`!p snip.rv = match.group(1)`
endsnippet


priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet ~> "rightsquigarrow" iA
\rightsquigarrow $0
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus $0
endsnippet

context "math()"
snippet >> ">>" iA
\gg $0
endsnippet

context "math()"
snippet << "<<" iA
\ll $0
endsnippet

context "math()"
snippet ~~ "~" iA
\sim $0
endsnippet

context "math()"
snippet || "mid" iA
\mid $0
endsnippet

context "math()"
snippet cc "subset" Ai
\subset $0
endsnippet

context "math()"
snippet c= "subseteq" Ai
\subseteq $0
endsnippet

context "math()"
snippet notin "not in " iA
\not\in $0 
endsnippet

context "math()"
snippet inn "in " iA
\in $0
endsnippet

context "math()"
snippet NN "N" iA
\mathbb{N}$2
endsnippet

context "math()"
snippet nN "cap" iA
\cap $0
endsnippet

context "math()"
snippet uU "cup" iA
\cup $0
endsnippet

context "math()"
snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\varnothing $0
endsnippet

context "math()"
snippet CC "complex" iA
\mathbb{C}
endsnippet

context "math()"
snippet RR "real" iA
\mathbb{R}
endsnippet

context "math()"
snippet QQ "Q" iA
\mathbb{Q}
endsnippet

context "math()"
snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

context "math()"
snippet PP "P" iA
\mathbb{P}
endsnippet

context "math()"
snippet EE "E" iA
\mathbb{E}
endsnippet

context "math()"
snippet VV "V" iA
\mathbb{V}
endsnippet

context "math()"
snippet <! "normal" iA
\triangleleft 
endsnippet

context "math()"
snippet <> "hokje" iA
\diamond 
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1}
endsnippet

context "math()"
snippet tt "text" iA
\text{$1} $0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

context "math()"
snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
\end{align*}
endsnippet

context "math()"
snippet set "set" wA
\\{ $1 \\} $0
endsnippet

context "math()"
snippet bset "set" wA
\left\\{ $1 \mid $2 \right\\} $0
endsnippet

snippet bigset "Big set" iA
\[
	$1 = \left\\{ $22 \mid $0 \right\\}
\]
endsnippet

priority 10
context "math()"
snippet vec "vector" iA
\vec{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])vec" "vec" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

priority 200
snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "tld" "tilde" riA
\widetilde{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])tld" "tilde" riA
\widetilde{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "ddt" "ddot" riA
\ddot{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])ddt" "ddot" riA
\ddot{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "dot" "dot" riA
\dot{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])dot" "dot" riA
\dot{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "cal" "cal" riA
\mathcal{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])cal" "cal" riA
\mathcal{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "frak" "frak" riA
\mathfrak{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])frak" "frak" riA
\mathfrak{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet wt "wide tilde" iA
\widetilde{${1:visual}}$0
endsnippet

context "math()"
snippet HH "H" iA
\mathbb{H}
endsnippet

context "math()"
snippet DD "D" iA
\mathbb{D}
endsnippet

context "math()"
snippet KK "K" iA
\mathbb{K}
endsnippet

context "math()"
snippet qd "quad" iA
\quad 
endsnippet

context "math()"
snippet Qd "qquad" iA
\qquad 
endsnippet

# vim:ft=snippets
