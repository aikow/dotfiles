# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


#######################################################################
#                                 zinit                               #
#######################################################################
#
# Source the zinit script
source "${HOME}/.local/share/zinit/zinit.git/zinit.zsh"

# Plugins
zinit snippet OMZL::git.zsh
zinit snippet OMZP::git
zinit snippet OMZP::colored-man-pages
zinit snippet OMZP::command-not-found

# These 2 must be in this order
zinit load zsh-users/zsh-autosuggestions
zinit load zsh-users/zsh-syntax-highlighting
zinit load zsh-users/zsh-history-substring-search

zinit wait lucid atload"zicompinit; zicdreplay" blockf for \
    zsh-users/zsh-completions

# Theme
zinit ice depth"1"
zinit light bhilburn/powerlevel9k

POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(vi_mode context dir )
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status anaconda virtualenv time)

POWERLEVEL9K_VI_INSERT_MODE_STRING="I"
POWERLEVEL9K_VI_COMMAND_MODE_STRING="N"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3
POWERLEVEL9K_SHORTEN_DELIMITER="..."
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_left"
POWERLEVEL9K_DIR_SHOW_WRITABLE=true


#######################################################################
#                               History                               #
#######################################################################
#
# History Options
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt hist_verify

# Share history across all your terminal windows
setopt share_history
setopt noclobber

# Increase history size
export HISTSIZE=100000
export SAVEHIST=100000
export HISTFILE=~/.zsh_history
export HISTIGNORE="l:ls:ll:lll:lt:lg:cd:cd -:pwd:exit:date:* --help:man"


#######################################################################
#                         User Configuration                          #
#######################################################################
#
# Set up automatic ls on cd
auto_ls() {
	emulate -L zsh
	echo
  if command -v exa &>/dev/null; then
    exa --icons -a --group-directories-first
  else
    ls -AG --color=always
  fi
}

# Check if auto-ls has already been added to the chpwd_functions array. This
# ensures that resourcing the zshrc file doesnt cause ls to be run twice.
if [[ ! "${chpwd_functions[*]}" =~ "auto_ls" ]]; then
  chpwd_functions=(auto_ls $chpwd_functions)
fi

# Bind C-e to edit the command line
autoload edit-command-line
zle -N edit-command-line
bindkey '^x^e' edit-command-line

# Bind C-o to add an argument to the previous command
bindkey -s '^o' '^[k0Ea '

# Bind C-x C-l to pipe the previous command into less
bindkey -s '^x^l' '^[kA | less'

# Bind C-x C-p to pipe the previous command
bindkey -s '^x^p' '^[kA | '

# History seach
bindkey '^k' history-beginning-search-backward
bindkey '^j' history-beginning-search-forward

# Clear screen
bindkey "^l" clear-screen

# Git bindings
source "${DOTFILES_SH}/functions/fzf-git.sh"
source "${DOTFILES_SH}/functions/fzf-k8s.sh"

function join_lines() {
  local item
  while read item; do
    echo -n "${(q)item} "
  done
}

function bind_function() {
  local func="${1?Missing function to bind}"
  local key="${2?Missing key to bind to}"
  eval "function _${func}_widget() { local result=\"\$(${func} | join_lines)\"; zle reset-prompt; LBUFFER+=\"\${result}\" }"
  eval "zle -N _${func}_widget"
  eval "bindkey '${key}' _${func}_widget"
}

bind_function fzf_git_status ^g^f
bind_function fzf_git_branches ^g^b
bind_function fzf_git_tags ^g^t
bind_function fzf_git_remotes ^g^r
bind_function fzf_git_commits ^g^h
bind_function fzf_git_stash ^g^s
bind_function fzf_k8s_pods ^g^p
bind_function fzf_k8s_jobs ^g^j

# Load completions
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# ------------------------------------------------------------------------------
# |                                   Sources                                  |
# ------------------------------------------------------------------------------

# Source fzf if installed
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# Load user aliases
[[ -f "${DOTFILES_ZSH}/aliases" ]]  && source "${DOTFILES_ZSH}/aliases"

# Load local settings and aliases
[[ -f "${LOCAL_CONFIG}/aliases" ]] && source "${LOCAL_CONFIG}/aliases"
[[ -f "${LOCAL_CONFIG}/zshrc" ]] && source "${LOCAL_CONFIG}/zshrc"
