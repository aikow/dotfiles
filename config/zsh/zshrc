# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#######################################################################
#                                 zinit                               #
#######################################################################
#
# Source the zinit script
source "${HOME}/.local/share/zinit/zinit.git/zinit.zsh"

# Plugins
zinit snippet OMZL::git.zsh
zinit snippet OMZP::git
# zinit snippet OMZP::colored-man-pages
zinit snippet OMZP::command-not-found

# These 2 must be in this order
zinit load zsh-users/zsh-autosuggestions
zinit load zsh-users/zsh-syntax-highlighting
zinit load zsh-users/zsh-history-substring-search

zinit load softmoth/zsh-vim-mode
  # zsh-vim-mode Options
  MODE_CURSOR_VIINS="#00ff00 blinking bar"
  MODE_CURSOR_REPLACE="$MODE_CURSOR_VIINS #ff0000"
  MODE_CURSOR_VICMD="green block"
  MODE_CURSOR_SEARCH="#ff00ff steady underline"
  MODE_CURSOR_VISUAL="$MODE_CURSOR_VICMD steady bar"
  MODE_CURSOR_VLINE="$MODE_CURSOR_VISUAL #00ffff"

# Warn you when you run a command that you've got an alias for
zinit load djui/alias-tips

# Load additional zsh completions
zinit wait lucid atload"zicompinit; zicdreplay" blockf for zsh-users/zsh-completions

# Powerlevel10k theme
zinit ice depth"1"
zinit light romkatv/powerlevel10k

# Load the powerlevel10k prompt
source "${DOTFILES_ZSH}/p10k.zsh"


#######################################################################
#                               History                               #
#######################################################################
#
# History Options
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt hist_verify

# Share history across all your terminal windows
setopt noshare_history
setopt noclobber

# Increase history size
export HISTSIZE=100000
export SAVEHIST=100000
export HISTFILE=~/.zsh_history
typeset -TU HISTIGNORE histignore
export histignore=(
  "* --help"
  "cd -"
  "cd"
  "date"
  "exit"
  "l"
  "lg"
  "ll"
  "lll"
  "ls"
  "lt"
  "man"
  "pwd"
)


#######################################################################
#                         User Configuration                          #
#######################################################################
#
# command correction
setopt correct

setopt auto_pushd
setopt pushd_ignore_dups

# better zsh correction prompt
SPROMPT="Correct $fg[red]%R$reset_color to $fg[green]%r$reset_color? ([y]es, [n]o, [a]bort, [e]dit) "

# Set up automatic ls on cd
auto_ls() {
	emulate -L zsh
	echo
  if command -v exa &>/dev/null; then
    exa --icons -a --group-directories-first
  else
    ls -AG --color=always
  fi
}

# Check if auto-ls has already been added to the chpwd_functions array. This
# ensures that resourcing the zshrc file doesnt cause ls to be run twice.
if [[ ! "${chpwd_functions[*]}" =~ "auto_ls" ]]; then
  chpwd_functions=(auto_ls $chpwd_functions)
fi

# Bind C-e to edit the command line
autoload edit-command-line
zle -N edit-command-line
bindkey '^x^e' edit-command-line

# Bind C-o to add an argument to the previous command
bindkey -s '^o' '^[k0Ea '

# Bind C-x C-l to pipe the previous command into less
bindkey -s '^x^l' '^[kA | less'

# Bind C-x C-p to pipe the previous command
bindkey -s '^x^p' '^[kA | '

# History seach
bindkey '^p' history-beginning-search-backward
bindkey '^n' history-beginning-search-forward

# Clear screen
bindkey "^l" clear-screen

# Git bindings
source "${DOTFILES_SH}/functions/fzf-git.sh"
source "${DOTFILES_SH}/functions/fzf-k8s.sh"

function join-lines() {
  local item
  while read item; do
    echo -n "${(q)item} "
  done
}

function bind_function() {
  local func="${1?Missing function to bind}"
  local key="${2?Missing key to bind to}"
  eval "function fzf-${func}-widget() { local result=\"\$(${func} | join-lines)\"; zle reset-prompt; LBUFFER+=\"\$result\" }"
  eval "zle -N fzf-${func}-widget"
  eval "bindkey '${key}' fzf-${func}-widget"
}

bind_function fzf_git_status ^g^f
bind_function fzf_git_branches ^g^b
bind_function fzf_git_tags ^g^t
bind_function fzf_git_remotes ^g^r
bind_function fzf_git_commits ^g^h
bind_function fzf_git_stash ^g^s
bind_function fzf_k8s_pods ^g^p
bind_function fzf_k8s_jobs ^g^j

# Load completions 
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# ZSH tab completion with fzf
# zinit light Aloxaf/fzf-tab


#######################################################################
#                               Sources                               #
#######################################################################
#
# Source fzf if installed
if [[ -f ~/.fzf.zsh ]]; then
  source ~/.fzf.zsh
elif [[ -f /usr/share/fzf/key-bindings.zsh ]]; then
  source /usr/share/fzf/key-bindings.zsh
fi

# Load user aliases
[[ -f "${DOTFILES_ZSH}/aliases" ]]  && source "${DOTFILES_ZSH}/aliases"

# Load local settings and aliases
[[ -f "${LOCAL_CONFIG}/aliases" ]] && source "${LOCAL_CONFIG}/aliases"
[[ -f "${LOCAL_CONFIG}/zshrc" ]] && source "${LOCAL_CONFIG}/zshrc"
