#!/usr/bin/env bash

export DOTFILES="$HOME/.dotfiles"

# If you come from bash you might have to change your $PATH.
export PATH="${HOME}/.bin:${DOTFILES}/bin:/${HOME}/.local/bin:/usr/local/bin:/opt/vc/bin:${PATH}"

export VISUAL=vim
export EDITOR=vim
export TERM=xterm-256color


#######################################################################
#                               History                               #
#######################################################################


# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=20000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi


#######################################################################
#                        Prompt Customization                         #
#######################################################################

# Set editing mode to Vi mode
set editing-mode vi
set -o vi

# Reset cursor
export PS0="\e[5 q"

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "${force_color_prompt}" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "${color_prompt}" = yes ]; then
    # Default color prompt:
    # export PS1="\[\n\e[0;32m[\] \[\e[0m\e[1;31m\]\u\[\e[0m\e[1;33m\]@\[\e[0m\e[1;32m\]\h\[\e[0m\] \[\e[0;34m\]\w\[\e[0m\e[0;32m\] ]\n\$ \[\e[0m\]" #\[\033[5 q\]"
 
    # Read Mike's custom prompt, apply it to PS1.
    source "${DOTFILES}/bash/ps1rc"
    PS1="$(__mkps1)"
else
    # Modified to support git status in PS1.
    # Also modified by Mike to function better.
    #PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    PS1='\n${debian_chroot:+($debian_chroot)}\u:\w$(__git_ps1 " (%s)")\n\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Return time on long running processes
REPORTTIME=2
TIMEFMT="%U user %S system %P cpu %*Es total"


#######################################################################
#                               Aliases                               #
#######################################################################

[[ -f "${DOTFILES}/bash/.aliases" ]] || source "${DOTFILES}/bash/aliases"

# Local configurations
[[ ! -f "${HOME}/.aliases.local" ]] || source "${HOME}/.aliases.local"
[[ ! -f "${HOME}/.bashrc.local" ]] || source "${HOME}/.bashrc.local"

# Source the conda config if it exists
[[ ! -f "${HOME}/.conda.bash" ]] || source "${HOME}/.conda.bash"

