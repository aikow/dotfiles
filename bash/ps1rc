#!/usr/bin/env bash

# For Git PS1
# source /usr/lib/git-core/git-sh-prompt;
source "${DOTFILES}/bash/bash_git"
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWUPSTREAM="verbose"

bg_red=$(tput setab 1)
bg_gray=$(tput setab 240)

fg_red=$(tput setaf 1)
fg_white=$(tput setaf 15)
fg_cyan=$(tput setaf 45)
fg_green=$(tput setaf 34)
fg_magenta=$(tput setaf 213)

st_bold=$(tput bold)
st_underlined=$(tput smul)
st_blink=$(tput blink)
st_invert=$(tput rev)

st_reset=$(tput sgr0)

__mkps1_debian_chroot() {
    # This string is intentionally single-quoted:
    # It will be evaluated when $PS1 is evaluated to generate the prompt each time.
    echo '${debian_chroot:+($debian_chroot)}';
}

__mkps1_inject_exitcode() {
    local code=$1

    if [ "$code" -ne "0" ]; then
        echo " $code "
    fi
}

__mkps1_exitcode() {
    # We need to run a function at runtime to evaluate the exitcode.
    echo "\[${bg_red}${fg_white}\]\$(__mkps1_inject_exitcode \$?)\[${st_reset}\]"
}

__mkps1_time() {
    echo "\[${bg_gray}${fg_white}\] \t \[${st_reset}\]"
}

__mkps1_username() {
    echo "\[${fg_cyan}\] \u \[${st_reset}\]";
}

__mkps1_host() {
    echo "\[${fg_orange}\] \h \[${st_reset}\]"
}

__mkps1_arrow() {
    echo "\[${st_bold}${fg_red}\]❯\[${st_reset}\]";
}

__mkps1_workdir() {
    echo "\[${st_bold}${fg_cyan}\]\w\[${st_reset}\]";
}

__mkps1_git() {
    # Escaping the $ is intentional:
    # This is evaluated when the prompt is generated.
    echo "\$(__git_ps1 ' (\[${fg_magenta}\]%s\[${st_reset}\])')"
}

__mkps1_conda() {
    # Check if conda prefix is set
    if [[ ! -z "${CONDA_PREFIX}" ]]; then
        echo '\[${st_bold}${fg_red}\]❯ \[${st_reset}\]\[${fg_green}\] $(basename ${CONDA_PREFIX}) \[${st_reset}\]'
    else
        echo ""
    fi
}

__mkps1_venv() {
    # Check if virtual env exists
    if [[ ! -z "${VRITUAL_ENV}" ]]; then
        echo '\[${st_bold}${fg_red}\]❯ \[${st_reset}\]\[${fg_green}\] $(basename ${VIRTUAL_ENV}) \[${st_reset}\]'
    else
        echo ""
    fi
}

__mkps1_box_top() {
    echo "\[${fg_cyan}\]╭\[${st_reset}\]"
}

__mkps1_box_bottom() {
    echo "\[${fg_cyan}\]╰\[${st_reset}\]"
}

__mkps1_user_prompt() {
    echo "\[${st_bold}\]\$\[${st_reset}\] ";
}

__mkps1() {
    local ps1="\n$(__mkps1_box_top)"
    ps1+="$(__mkps1_exitcode)$(__mkps1_time)"
    ps1+="$(__mkps1_username)"
    ps1+="$(__mkps1_conda)"
    ps1+="$(__mkps1_venv)"
    ps1+="$(__mkps1_arrow) "
    ps1+="$(__mkps1_workdir)"
    ps1+="$(__mkps1_git)"
    ps1+="\n$(__mkps1_box_bottom)"
    ps1+="$(__mkps1_user_prompt)";

    echo "$ps1";
}

