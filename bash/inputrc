#######################################################################
#                               Options                               #
#######################################################################

# Use Vi, not Emacs, style editing
set editing-mode vi

# Set cursor depending on prompt
set show-mode-in-prompt on
set vi-cmd-mode-string "\1\e[2 q\2"
set vi-ins-mode-string "\1\e[5 q\2"

set colored-stats On
set completion-ignore-case On
set completion-prefix-display-length 3
set mark-symlinked-directories On
set menu-complete-display-prefix on
set show-all-if-ambiguous On
set show-all-if-unmodified On
set visible-stats On


#######################################################################
#                           Vi Command Mode                           #
#######################################################################

# Keymaps for when we're in command mode (e.g., after hitting ESC)
set keymap vi-command

"\c-x\c-r": re-read-init-file

# Insert the arguments from the last command
"p": "i !!*\r"

# When hitting option-up/option-down, cycle through the previous commands
# which start with the prefix you've entered, rather than just cycling through
# the last entered commands.
# In OS X's Terminal.app preferences, I have 'Use option as meta key' off, and
# have mapped "option cursor up" to "\033\033[A" and "option cursor down" to 
# "\033\033[B".
# Feel free to bind to whatever you want. Delete the first '\e' in the keymap
# to set plain up/down to do a history search by default.
"\c-p": history-search-backward
"\c-n": history-search-forward


#######################################################################
#                           Vi Insert Mode                            #
#######################################################################

set keymap vi-insert
"\C-x\C-e": edit-and-execute-command

"\c-p":history-search-backward
"\c-n":history-search-forward

# Pressing tab will list all completions & select the first one. Pressing it 
# again will cycle through available completions.
TAB: menu-complete
# Shift-TAB cycles completions backward
"\e[Z": menu-complete-backward

# Needed because binding 'p' in command mode above wipes its insert mode
# function, too. This fixes that, and will insert 'p' when you type 'p'.
"p": self-insert

# Edit options before rerunning previous command, eg: ls a b c -> ls -al a b c
"\C-o": "\e-0eli "

# glob patterns without executing, eg: 'rm *x'
"\C-e": glob-expand-word

